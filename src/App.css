
#root {
  margin: 0 auto;
  padding: 0;
  width: 100%;
}

.app-background {
  background-image: 
    radial-gradient(circle at top right, rgba(79, 209, 197, 0.15), transparent 70%),
    radial-gradient(circle at bottom left, rgba(155, 135, 245, 0.15), transparent 70%),
    linear-gradient(to bottom, rgba(255, 255, 255, 0.9), rgba(245, 245, 255, 0.92));
  min-height: 100vh;
  position: relative;
  overflow-x: hidden;
  transition: background-image 0.5s ease-in-out;
}

.dark .app-background {
  background-image: 
    radial-gradient(circle at top right, rgba(79, 209, 197, 0.18), transparent 70%),
    radial-gradient(circle at bottom left, rgba(155, 135, 245, 0.18), transparent 70%),
    linear-gradient(to bottom, rgba(20, 20, 30, 0.95), rgba(10, 10, 20, 0.95));
}

.app-container {
  max-width: 1400px;
  margin: 0 auto;
  padding: 1rem;
  position: relative;
  z-index: 1;
}

/* Enhanced background particles */
.bg-particle {
  position: absolute;
  border-radius: 50%;
  background: linear-gradient(135deg, rgba(79, 209, 197, 0.6), rgba(155, 135, 245, 0.6));
  opacity: 0.2;
  pointer-events: none;
  z-index: 0;
  animation: float-particle 20s ease-in-out infinite;
  filter: blur(1px);
}

.dark .bg-particle {
  opacity: 0.3;
  filter: blur(2px);
  background: linear-gradient(135deg, rgba(79, 209, 197, 0.7), rgba(155, 135, 245, 0.7));
}

/* Interactive orbs */
.interactive-orb {
  position: absolute;
  width: 100px;
  height: 100px;
  border-radius: 50%;
  opacity: 0.5;
  background: radial-gradient(circle at 30% 30%, rgba(255, 255, 255, 0.8), rgba(255, 255, 255, 0.2));
  filter: blur(8px);
  transition: all 0.8s ease;
  pointer-events: none;
}

.dark .interactive-orb {
  background: radial-gradient(circle at 30% 30%, rgba(79, 209, 197, 0.4), rgba(155, 135, 245, 0.1));
}

@keyframes float-particle {
  0%, 100% { 
    transform: translateY(0) translateX(0) scale(1);
    opacity: 0.2;
  }
  25% {
    transform: translateY(-50vh) translateX(20vw) scale(1.5);
    opacity: 0.1;
  }
  50% {
    transform: translateY(-80vh) translateX(40vw) scale(0.8);
    opacity: 0.05;
  }
  75% {
    transform: translateY(-30vh) translateX(60vw) scale(1.2);
    opacity: 0.15;
  }
}

/* Improved typography */
h1, h2, h3, h4, h5, h6 {
  font-family: 'Quicksand', sans-serif;
  letter-spacing: -0.02em;
}

.gradient-text {
  background: linear-gradient(90deg, #4FD1C5, #9b87f5);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.dark .gradient-text {
  background: linear-gradient(90deg, #60e0d3, #a995ff);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Card effects */
.glass-effect {
  backdrop-filter: blur(12px);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  border-radius: var(--radius);
}

/* Shimmer effect for cards */
.glass-effect::after {
  content: '';
  position: absolute;
  top: -100%;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.1) 50%,
    rgba(255, 255, 255, 0) 100%
  );
  transform: rotate(45deg);
  transition: all 0.8s ease;
  z-index: 0;
  pointer-events: none;
}

.glass-effect:hover::after {
  top: 100%;
  left: 100%;
}

.dark .glass-effect::after {
  background: linear-gradient(
    135deg,
    rgba(255, 255, 255, 0) 0%,
    rgba(255, 255, 255, 0.05) 50%,
    rgba(255, 255, 255, 0) 100%
  );
}

/* Animation utilities */
.animate-float-slow {
  animation: float 3s ease-in-out infinite;
}

.animate-float-slower {
  animation: float 4s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0); }
  50% { transform: translateY(-10px); }
}

/* Interactive hover effects */
.interactive-card {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
  will-change: transform, box-shadow;
  position: relative;
  z-index: 1;
}

.interactive-card:hover {
  transform: translateY(-5px);
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
}

.dark .interactive-card:hover {
  box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
}

/* Scroll styling */
.scrollbar-thin {
  scrollbar-width: thin;
}

.scrollbar-thin::-webkit-scrollbar {
  width: 4px;
}

.scrollbar-thin::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.05);
  border-radius: 10px;
}

.scrollbar-thin::-webkit-scrollbar-thumb {
  background: rgba(0, 0, 0, 0.1);
  border-radius: 10px;
}

.scrollbar-thin::-webkit-scrollbar-thumb:hover {
  background: rgba(0, 0, 0, 0.2);
}

/* Enhanced card tilt effect */
.tilt-card {
  transition: transform 0.2s ease;
  transform-style: preserve-3d;
}

.tilt-card:hover {
  transform: perspective(1000px) rotateX(2deg) rotateY(2deg);
}

/* Enhanced pulsing effect */
.pulse-subtle {
  animation: pulse-subtle 3s infinite;
  position: relative;
}

@keyframes pulse-subtle {
  0% {
    box-shadow: 0 0 0 0 rgba(79, 209, 197, 0.4);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(79, 209, 197, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(79, 209, 197, 0);
  }
}

/* Enhanced page transitions */
.page-enter {
  opacity: 0;
  transform: translateY(10px);
  filter: blur(5px);
}

.page-enter-active {
  opacity: 1;
  transform: translateY(0);
  filter: blur(0);
  transition: opacity 300ms, transform 300ms, filter 300ms;
}

.page-exit {
  opacity: 1;
  filter: blur(0);
}

.page-exit-active {
  opacity: 0;
  transform: translateY(-10px);
  filter: blur(5px);
  transition: opacity 300ms, transform 300ms, filter 300ms;
}

/* Button hover effects */
.btn-hover-effect {
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
}

.btn-hover-effect::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.1);
  transform: translateX(-100%);
  transition: transform 0.3s ease;
}

.btn-hover-effect:hover::before {
  transform: translateX(0);
}

.dark .btn-hover-effect::before {
  background: rgba(255, 255, 255, 0.05);
}

/* Active section indicator */
.active-section {
  position: relative;
}

.active-section::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 100%;
  height: 2px;
  background: linear-gradient(90deg, #4FD1C5, #9b87f5);
  transform: scaleX(0);
  transform-origin: left;
  transition: transform 0.3s ease;
}

.active-section:hover::after,
.active-section.active::after {
  transform: scaleX(1);
}

/* New 3D effects */
.scene {
  perspective: 1000px;
}

.card-3d {
  transition: transform 0.5s;
  transform-style: preserve-3d;
  cursor: pointer;
}

.card-3d:hover {
  transform: rotateY(10deg) rotateX(5deg);
}

@media (min-width: 768px) {
  .app-container {
    padding: 2rem;
  }
}

/* Firefly effect */
.firefly {
  position: absolute;
  width: 3px;
  height: 3px;
  border-radius: 50%;
  background-color: rgba(255, 255, 255, 0.5);
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.7);
  animation: firefly-animation 4s linear infinite;
}

@keyframes firefly-animation {
  0% {
    opacity: 0;
    transform: translateY(0) translateX(0) scale(1);
  }
  50% {
    opacity: 0.7;
    transform: translateY(-100px) translateX(100px) scale(0.2);
  }
  100% {
    opacity: 0;
    transform: translateY(-200px) translateX(200px) scale(0);
  }
}

/* Gradient border hover effect */
.gradient-border-hover {
  position: relative;
  border: 2px solid transparent;
  background-clip: padding-box;
  transition: all 0.3s ease;
}

.gradient-border-hover:before {
  content: '';
  position: absolute;
  top: -2px;
  right: -2px;
  bottom: -2px;
  left: -2px;
  background: linear-gradient(45deg, #4FD1C5, #9b87f5);
  z-index: -1;
  border-radius: calc(var(--radius) + 2px);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.gradient-border-hover:hover:before {
  opacity: 1;
}

/* Light reflections */
.light-reflection {
  position: relative;
  overflow: hidden;
}

.light-reflection:before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, rgba(255, 255, 255, 0) 70%);
  transform: rotate(-45deg);
  animation: light-move 4s infinite linear;
}

@keyframes light-move {
  0% {
    transform: rotate(-45deg) translateY(-30%);
  }
  100% {
    transform: rotate(-45deg) translateY(100%);
  }
}

